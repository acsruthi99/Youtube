/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package youtube;

import org.testng.annotations.*;
import static org.testng.Assert.*;

public class Apptest {
     
    
        WebDriver driver;
        public Apptest(){
            System.out.println("Constructor: Apptest");
            WebDriverManager.chromedriver().timeout(30).setup();
            driver = new ChromeDriver();
            driver.manage().window().maximize();
            driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
    
        }
    
        public void endTest()
        {
            System.out.println("End Test: Apptest");
            driver.close();
            driver.quit();
    
        }
        @Test
        public void Apptest() throws InterruptedException{
        driver.get("https://www.youtube.com/");
        SoftAssert softAssert = new SoftAssert();
        WebDriverWait wait = new WebDriverWait(driver, 10);
        driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);

        String currentURL = driver.getCurrentUrl();
        Assert.assertEquals(currentURL, "https://www.youtube.com/", "URL doesn't match");
        WebElement abt = driver.findElement(By.xpath("//a[text()='About']"));
        abt.click();
        WebElement abouttext = driver.findElement(By.xpath("//section[@class='ytabout__content']"));
        System.out.println("text : "abouttext.getText());
        WebElement moviestab = driver.findElement(By.xpath("//a[@title = 'Movies']"));
        moviestab.click();
        WebElement rightArrow =driver.findElement(By.xpath("//div[@id='contents']//a[@title='Top selling']/../../../../..//div[@id='right-arrow']//button"));
        while (isPresent(rightArrow, wait)) {
            rightArrow.click();
        }
        WebElement aForAdult = driverfindElement(By.xpath("//span[@title='The Wolf of Wall Street']/../../..//*[@class='badges style-scope ytd-grid-movie-renderer']//p[text()='A']"));
        softAssert.assertTrue(aForAdult.getText().contains("A"), "Movie is not marked as 'A' for Mature");
        WebElement comedyOrAnimation = driver.findElement(By.xpath("//span[@title='The Wolf of Wall Street']/../../..//*[@class='badges style-scope ytd-grid-movie-renderer']/preceding-sibling::a//span[@class='grid-movie-renderer-metadata style-scope ytd-grid-movie-renderer']"));
        softAssert.assertTrue(comedyOrAnimation.getText().contains("Comedy") || comedyOrAnimation.getText().contains("Animation"), "Movie is neither Comedy nor Animation");

        WebElement musictab = driver.findElement(By.xpath("//*[@class='style-scope ytd-guide-entry-renderer']/../a[@title='Music']"));
        musictab.click();
        WebElement rightclick = driver.findElement(By.xpath("//div[@id='dismissible']/div/div/h2/div/div/a/span[text()='India's Biggest Hits']/../../../../../../following-sibling::div//button/../../../following-sibling::div/following-sibling::div//button"));
        while (isPresent(rightArrow, wait)) {
            rightclick.click();
        }
        WebElement playListName = driver.findElement(By.xpath("//a[@class='yt-simple-endpoint style-scope ytd-compact-station-renderer']/h3[contains(text(),'Bollywood Dance Hitlist')]"));
        System.out.println("PlayListName : "playListName.getText());
        WebElement trackCount = driver.findElement(By.xpath("//a[@class='yt-simple-endpoint style-scope ytd-compact-station-renderer']/h3[contains(text(),'Bollywood Dance Hitlist')]/../p"));
        String trackCountText = trackCountElement.getText();
        int count = extractInteger(trackCountText);
        softAssert.assertTrue(count <= 50, "Count is greater than 50. Actual count: " + count);
        
        WebElement newsTab = driver.findElement(By.xpath("//a[@title='News']"));
        newsTab.click();
        List<WebElement> firstThreeTitle = driver.findElements(By.(xpath("//span[text()='Latest news posts']/../../../../../following-sibling::div//div[@id='content']//div[@id='body']")));
        for (int i = 0; i < Math.min(3, firstThreeTitle.size()); i++) {
            WebElement element = firstThreeTitle.get(i);
            WebElement titleElement = element.findElement(By.tagName("h2"));
            WebElement bodyElement = element.findElement(By.tagName("p"));
            String title = titleElement.getText();
            String body = bodyElement.getText();
            System.out.println("Title " + (i + 1) + ": " + title);
            System.out.println("Body " + (i + 1) + ": " + body);
        }
        int sum = 0;
        List<WebElement> likesCount = driver.findElements(By.xpath("//span[@id='vote-count-middle']"));
        for (int i = 0; i < Math.min(3, likesCount.size()); i++) {
            WebElement element = likesCount.get(i);
            String text = element.getText();
            int count = Integer.parseInt(text);
            sum += count;
        }
        System.out.println("Sum of likes counts of the first three News is : " + sum);

        for (String itemName : itemsToSearch) {
            WebElement searchbar = driver.findElement(By.xpath("//input[@id='search']"));
            searchbar.clear();
            searchbar.sendKeys(itemName);
            searchbar.sendKeys(Keys.RETURN);
        }
        List<String> itemsToSearch = readItemsFromExcel("C:\Crio Projects\Youtube\app\src\test\resources\excel.xlsx");
        System.out.println("Items to be searched:");
        for (String item : itemsToSearch) {
            System.out.println(item);

            long totalViews = 0;
        while (totalViews < 100_000_000) { // 10 Crore = 100,000,000
            totalViews = getTotalViews(driver);
            ((JavascriptExecutor) driver).executeScript("window.scrollBy(0, 500)");
            Thread.sleep(2000);
            try {
                Thread.sleep(1000);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
            


        }
        private static List<String> readItemsFromExcel(String filePath) {
            List<String> items = new ArrayList<>();
            try (FileInputStream excelFile = new FileInputStream(filePath);
                 Workbook workbook = new XSSFWorkbook(excelFile)) {
                Sheet sheet = workbook.getSheetAt(0);
                for (Row row : sheet) {
                    Cell cell = row.getCell(0);
                    if (cell != null && cell.getCellType() == CellType.STRING) {
                        items.add(cell.getStringCellValue());
                    }
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
            return items;
        }

        private static boolean isPresent(WebElement element, WebDriverWait wait) {
            try {
                // Wait until the element is present
                wait.until(ExpectedConditions.visibilityOf(element));
                return true;
            } catch (Exception e) {
                // Element is not present (disappeared)
                return false;
            }
        }
    }

